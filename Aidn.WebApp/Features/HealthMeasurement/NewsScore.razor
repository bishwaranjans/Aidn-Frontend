@page "/measurements"

@inherits NewsScoreBase

@using System.ComponentModel.DataAnnotations

<MudGrid Class="mb-2">
    <MudItem xs="12">
        <h1> News Score</h1>
    </MudItem>
</MudGrid>

<EditForm Model="@Measurements" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    @foreach (var measurement in Measurements)
                    {
                        switch (measurement.MeasurementType)
                        {
                            case MeasurementType.TEMP:
                                <MudNumericField Immediate="true" Min="Constants.MinTemperature" Max="Constants.MaxTemperature" Variant="Variant.Outlined" Label="@Enum.GetName(typeof(MeasurementType),measurement.MeasurementType)"
                                     @bind-Value="measurement.Value" For="@(() => measurement.Value)" />
                                break;
                            case MeasurementType.HR:
                                <MudNumericField Immediate="true" Min="Constants.MinHr" Max="Constants.MaxHr" Variant="Variant.Outlined" Label="@Enum.GetName(typeof(MeasurementType),measurement.MeasurementType)"
                                     @bind-Value="measurement.Value" For="@(() => measurement.Value)" />
                                break;
                            case MeasurementType.RR:
                                <MudNumericField Immediate="true" Min="Constants.MinRr" Max="Constants.MaxRr" Variant="Variant.Outlined" Label="@Enum.GetName(typeof(MeasurementType),measurement.MeasurementType)"
                                     @bind-Value="measurement.Value" For="@(() => measurement.Value)" />
                                break;
                        }
                    }

                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="IsProcessing" Class="ml-auto">
                        @if (IsProcessing)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        }
                        <MudText>Calculate</MudText>
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Summary</MudText>
                @if (Success)
                {
                    <MudText Color="Color.Success">@Score</MudText>
                }
                else if (ValidationMessages is not null)
                {
                    @foreach (var errorMessage in ValidationMessages)
                    {
                        <MudText Color="@Color.Error">@errorMessage</MudText>
                    }
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the NEWS score.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>
